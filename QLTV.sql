-- Bảng độc giả
CREATE TABLE READER
(
	ID_READER VARCHAR(7) PRIMARY KEY,
	ID_TYPEREADER UUID,
	NAME_READER VARCHAR(40),
	SEX VARCHAR(5) CHECK (SEX IN ('Nam', 'Nữ')),
	ADDRESS TEXT,
	EMAIL TEXT UNIQUE,
	DOB DATE,
	PHONE VARCHAR(12) CHECK (LENGTH(PHONE) BETWEEN 10 AND 12) UNIQUE,
	CREATE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	READER_USERNAME TEXT,
	READER_PASSWORD TEXT,
	TOTAL_DEBT NUMERIC(10,2),
	ROLE_NAME VARCHAR(10),
	CONSTRAINT FK_READER_TYPEREADER FOREIGN KEY (ID_TYPEREADER) REFERENCES TYPEREADER(ID_TYPEREADER) ON DELETE CASCADE,
	CONSTRAINT FK_READER_ROLE FOREIGN KEY (ROLE_NAME) REFERENCES ROLES(ROLE_NAME)
)

-- Bảng loại độc giả
CREATE TABLE TYPEREADER
(
	ID_TYPEREADER UUID PRIMARY KEY,
	NAME_TYPEREADER VARCHAR(20)
)

-- Bảng thể loại sách
CREATE TABLE TYPEBOOK
(
	ID_TYPEBOOK UUID PRIMARY KEY,
	NAME_TYPEBOOK VARCHAR(20)
)

-- Bảng tác giả
CREATE TABLE AUTHOR
(
	ID_AUTHOR UUID PRIMARY KEY,
	ID_TYPEBOOK UUID,
	NAME_AUTHOR VARCHAR(40),
	NATIONALITY VARCHAR(60),
	BIOGRAPHY TEXT,
	CONSTRAINT FK_OUTHOR_TYPEBOOK FOREIGN KEY (ID_TYPEBOOK) REFERENCES TYPEBOOK(ID_TYPEBOOK) ON DELETE CASCADE
)

-- 3 bảng sách
-- Bảng đầu sách
CREATE TABLE HEADERBOOK
(
	ID_HEADERBOOK UUID PRIMARY KEY,
	ID_TYPEBOOK UUID,
	NAME_HEADERBOOK VARCHAR(50),
	DESCRIBE_BOOK TEXT,
	CONSTRAINT FK_HEADERBOOK_TYPEBOOK FOREIGN KEY (ID_TYPEBOOK) REFERENCES TYPEBOOK(ID_TYPEBOOK) ON DELETE CASCADE
)

-- Bảng sách
CREATE TABLE BOOK
(
	ID_BOOK VARCHAR(7) PRIMARY KEY, --B00001, B00002,...
	ID_HEADERBOOK UUID,
	PUBLISHER TEXT,
	REPRINT_YEAR INT,
	VALUEOFBOOK NUMERIC(10,2),
	CONSTRAINT FK_BOOK_HEADERBOOK FOREIGN KEY (ID_HEADERBOOK) REFERENCES HEADERBOOK(ID_HEADERBOOK) ON DELETE CASCADE
)
-- Bảng cuốn sách
CREATE TABLE THEBOOK
(
	ID_THEBOOK VARCHAR(7) PRIMARY KEY, -- TB0001, TB0002,...
	ID_BOOK VARCHAR(7),
	STATUS VARCHAR(20) NOT NULL CHECK(STATUS IN ('Có sẵn', 'Đã mượn')) DEFAULT 'Có sẵn',
	CONSTRAINT FK_THEBOOK_BOOK FOREIGN KEY (ID_BOOK) REFERENCES BOOK(ID_BOOK) ON DELETE CASCADE
)

-- Bảng sáng tác
CREATE TABLE BOOK_WRITING
(
	ID_HEADERBOOK UUID,
	ID_AUTHOR UUID,
	CONSTRAINT FK_CREATE_HEADERBOOK FOREIGN KEY (ID_HEADERBOOK) REFERENCES HEADERBOOK(ID_HEADERBOOK) ON DELETE CASCADE,
	CONSTRAINT FK_CREATE_OUTHOR FOREIGN KEY (ID_AUTHOR) REFERENCES AUTHOR(ID_AUTHOR) ON DELETE CASCADE
)

-- Bảng phiếu nhập sách
CREATE TABLE BOOKRECEIPT
(
	ID_BOOKRECEIPT UUID PRIMARY KEY,
	ID_READER VARCHAR(7),
	RECEIVED_DATE DATE,
	CONSTRAINT FK_BOOKRECEIPT_READER FOREIGN KEY (ID_READER) REFERENCES READER(ID_READER) ON DELETE CASCADE
)

-- Bảng chi tiết phiếu nhập sách
CREATE TABLE DETAIL_BOOKRECEIPT
(
	ID_BOOKRECEIPT UUID,
	ID_BOOK VARCHAR(7),
	QUANTITY INT,
	UNITPRICE NUMERIC(10,2),
	CONSTRAINT FK_DETAILBOOKRECEIPT_BOOKRECEIPT FOREIGN KEY (ID_BOOKRECEIPT) REFERENCES BOOKRECEIPT(ID_BOOKRECEIPT) ON DELETE CASCADE,
	CONSTRAINT FK_BOOKRECEIPT_BOOK FOREIGN KEY (ID_BOOK) REFERENCES BOOK(ID_BOOK) ON DELETE CASCADE
)

-- Bảng phiếu mượn trả sách
CREATE TABLE LOAN_SLIPBOOK
(
	ID_LOANSLIPBOOK UUID PRIMARY KEY,
	ID_THEBOOK VARCHAR(7),
	ID_READER VARCHAR(7),
	BORROW_DATE DATE,
	RETURN_DATE DATE,
	LOAN_PERIOD INT,
	FINE_AMOUNT NUMERIC(10,2),
	CONSTRAINT FK_LOANSLIPBOOK_THEBOOK FOREIGN KEY (ID_THEBOOK) REFERENCES THEBOOK(ID_THEBOOK) ON DELETE CASCADE,
	CONSTRAINT FK_LOANSLIPBOOK_READER FOREIGN KEY (ID_READER) REFERENCES READER(ID_READER) ON DELETE CASCADE
)

-- Bảng phạt
CREATE TABLE PENALTY_TICKET
(
	ID_PENALTY UUID PRIMARY KEY, 
	ID_READER VARCHAR(7),
	CREATED_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	AMOUNT_COLLECTED NUMERIC(10,2),
	AMOUNT_REMAINING NUMERIC(10,2),
	CONSTRAINT FK_PENALTY_READER FOREIGN KEY (ID_READER) REFERENCES READER(ID_READER) ON DELETE CASCADE
)

-- Bảng báo cáo theo thể loại
CREATE TABLE CATEGORY_REPORT
(
	ID_CATEGORYREPORT UUID PRIMARY KEY,
	MONTH_REPORT INT,
	YEAR_REPORT INT,
	TOTAL_BORROWCOUNT INT
);

-- Bảng chi tiết báo cáo theo thể loại
CREATE TABLE CATEGORY_REPORTDETAIL
(
	ID_CATEGORYREPORT UUID,
	ID_TYPEBOOK UUID,
	BORROW_COUNT INT,
	BORROW_RATIO FLOAT,
	CONSTRAINT FK_CATEGORYREPORT_1 FOREIGN KEY (ID_CATEGORYREPORT) REFERENCES CATEGORY_REPORT(ID_CATEGORYREPORT) ON DELETE CASCADE,
	CONSTRAINT FK_CATEGORYREPORT_2 FOREIGN KEY (ID_TYPEBOOK) REFERENCES TYPEBOOK(ID_TYPEBOOK) ON DELETE CASCADE
);

-- Bảng báo cáo trả trễ
CREATE TABLE OVERDUE_REPORT
(
	ID_OVERDUEREPORT UUID PRIMARY KEY,
	CREATED_DATE DATE
);

-- Bảng chi tiết báo cáo trả trễ
CREATE TABLE OVERDUE_REPORTDETAIL
(
	ID_OVERDUEREPORT UUID,
	ID_THEBOOK VARCHAR(7),
	BORROW_DATE DATE,
	LATE_DAYS INT,
	CONSTRAINT FK_OVERDUEREPORT_OVERDUE_REPORT FOREIGN KEY (ID_OVERDUEREPORT) REFERENCES OVERDUE_REPORT(ID_OVERDUEREPORT) ON DELETE CASCADE,
	CONSTRAINT FK_OVERDUEREPORT_THEBOOK FOREIGN KEY (ID_THEBOOK) REFERENCES THEBOOK(ID_THEBOOK) ON DELETE CASCADE
);

-- Bảng hình ảnh
CREATE TABLE IMAGE
(
	ID_IMG UUID PRIMARY KEY,
	ID_BOOK VARCHAR(7),
	ID_READER VARCHAR(7),
	ID_AUTHOR UUID,
	URL TEXT,
    CONSTRAINT FK_IMG_BOOK FOREIGN KEY (ID_BOOK) REFERENCES BOOK(ID_BOOK) ON DELETE CASCADE,
	CONSTRAINT FK_IMG_READER FOREIGN KEY (ID_READER) REFERENCES READER(ID_READER) ON DELETE CASCADE,
	CONSTRAINT FK_IMG_OUTHOR FOREIGN KEY (ID_AUTHOR) REFERENCES AUTHOR(ID_AUTHOR) ON DELETE CASCADE
)

-- Bảng đánh giá
CREATE TABLE EVALUATE
(
	ID_EVALUATE UUID PRIMARY KEY,
	ID_READER VARCHAR(7),
	ID_BOOK VARCHAR(7),
	EVA_COMMENT TEXT,
	EVA_STAR INT,
	CREATE_DATE TIMESTAMP,
	CONSTRAINT FK_EVALUATE_READER FOREIGN KEY (ID_READER) REFERENCES READER(ID_READER) ON DELETE CASCADE,
	CONSTRAINT FK_EVALUATE_BOOK FOREIGN KEY (ID_BOOK) REFERENCES BOOK(ID_BOOK) ON DELETE CASCADE
)

-- Bảng roles
CREATE TABLE ROLES
(
	ROLE_NAME VARCHAR(10) PRIMARY KEY,
	DESCRIPTION TEXT,
)

-- Bảng permission
CREATE TABLE PERMISSIONS
(
	PERMISSION_NAME VARCHAR(20) PRIMARY KEY,
	DESCRIPTION TEXT
)

-- Bảng role_permission
CREATE TABLE ROLE_PERMISSION
(
	ROLE_NAME VARCHAR(10),
	PERMISSION_NAME VARCHAR(20),
	PRIMARY KEY (ROLE_NAME, PERMISSION_NAME), 
	CONSTRAINT FK_ROLE_PERMISSION_1 FOREIGN KEY (ROLE_NAME) REFERENCES ROLES(ROLE_NAME) ON DELETE CASCADE,
	CONSTRAINT FK_ROLE_PERMISSION_2 FOREIGN KEY (PERMISSION_NAME) REFERENCES PERMISSIONS(PERMISSION_NAME) ON DELETE CASCADE
)

-- Bảng invalidated_token
CREATE TABLE INVALIDATE_TOKEN
(
	ID_TOKEN VARCHAR(36),
	EXPIRY_TIME TIMESTAMP
)

-- Bảng yêu thích sách
CREATE TABLE FAVORITEBOOK
(
	ID_READER VARCHAR(7),
	ID_BOOK VARCHAR(7),
	CREATE_DAY DATE,
	CONSTRAINT FK_FAVORITEBOOK_READER FOREIGN KEY (ID_READER) REFERENCES READER(ID_READER) ON DELETE CASCADE,
	CONSTRAINT FK_FAVORITE_BOOK FOREIGN KEY (ID_BOOK) REFERENCES BOOK(ID_BOOK) ON DELETE CASCADE
)

-- Bảng OTP
CREATE TABLE OTP (
    ID_OTP UUID PRIMARY KEY,
    OTP INT NOT NULL,
    EXPIRATION_TIME TIMESTAMP NOT NULL,
    ID_READER VARCHAR(7),
    CONSTRAINT FK_OTP_READER FOREIGN KEY (ID_READER) REFERENCES READER(ID_READER) ON DELETE CASCADE
)

-- Bảng tham số
CREATE TABLE PARAMETERS	
(
	ID_PARAMETER UUID PRIMARY KEY,
	NAME_PARAMETER VARCHAR(50),
	VALUE_PARAMETER INT
)